[
  {
    "objectID": "Homework 3.html",
    "href": "Homework 3.html",
    "title": "Homework 3",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\nThe relative path you would use is ../MyData.csv.\n\n\nWhat are the major benefits of using R projects?\n\n\nWhen you create an R project, it gets associated with a directory (or folder or repo). That folder is what the project uses as the working directory. This allows you to use relative paths from your projects working directories. As we often have many files associated with each analysis, it can make keeping analysis separate difficult. R projects provide a straightforward way to divide your work into multiple contexts.\n\n\nWhat is git and what is github?\n\n\nGit is a version control software. Github is an online hosting service for Git-based projects. Github allows you to have a remote file repository (folder) tracked by git\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\n\nThe default print() method for a tibble (which is used when you just type an R object into the console) is not the same as a data.frame. We get fancy printing that is more useful for us and doesn’t clog up our output space. We get information on the number of observations, columns, and see only the first few rows/columns.\nTibbles do not coerce down to a vector when you subset to only one column using [.\n\n\n\nRewrite the following nested function call using baseR’s chaining operator: arrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\n\nas_tibble(iris) %&gt;%\nselect(starts_with(\"Petal\"), Species) %&gt;%\nfilter(Petal.Length &lt; 1.55) %&gt;%\narrange(Species)\n\n\nWhat is meant by long format data and wide format data? Which do we generally prefer for statistical analysis?\n\n\nLong format data is when each row consists of one observation and each column one variable. Wide format data is when we may have more than one observation in a given row. For statistical analysis, we generally prefer long format data."
  },
  {
    "objectID": "Homework 3.html#task-1-conceptual-questions",
    "href": "Homework 3.html#task-1-conceptual-questions",
    "title": "Homework 3",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\nThe relative path you would use is ../MyData.csv.\n\n\nWhat are the major benefits of using R projects?\n\n\nWhen you create an R project, it gets associated with a directory (or folder or repo). That folder is what the project uses as the working directory. This allows you to use relative paths from your projects working directories. As we often have many files associated with each analysis, it can make keeping analysis separate difficult. R projects provide a straightforward way to divide your work into multiple contexts.\n\n\nWhat is git and what is github?\n\n\nGit is a version control software. Github is an online hosting service for Git-based projects. Github allows you to have a remote file repository (folder) tracked by git\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\n\nThe default print() method for a tibble (which is used when you just type an R object into the console) is not the same as a data.frame. We get fancy printing that is more useful for us and doesn’t clog up our output space. We get information on the number of observations, columns, and see only the first few rows/columns.\nTibbles do not coerce down to a vector when you subset to only one column using [.\n\n\n\nRewrite the following nested function call using baseR’s chaining operator: arrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\n\nas_tibble(iris) %&gt;%\nselect(starts_with(\"Petal\"), Species) %&gt;%\nfilter(Petal.Length &lt; 1.55) %&gt;%\narrange(Species)\n\n\nWhat is meant by long format data and wide format data? Which do we generally prefer for statistical analysis?\n\n\nLong format data is when each row consists of one observation and each column one variable. Wide format data is when we may have more than one observation in a given row. For statistical analysis, we generally prefer long format data."
  },
  {
    "objectID": "Homework 3.html#task-2-reading-delimited-data",
    "href": "Homework 3.html#task-2-reading-delimited-data",
    "title": "Homework 3",
    "section": "Task 2 Reading Delimited Data",
    "text": "Task 2 Reading Delimited Data\n\nGlass data\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Read in data\nglass_data &lt;- read_csv(\"glass.data\")\n\nNew names:\nRows: 213 Columns: 11\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" dbl\n(11): 1...1, 1.52101, 13.64, 4.49, 1.10, 71.78, 0.06, 8.75, 0.00...9, 0....\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `1` -&gt; `1...1`\n• `0.00` -&gt; `0.00...9`\n• `0.00` -&gt; `0.00...10`\n• `1` -&gt; `1...11`\n\n# Change column names\nglass_col = c(\"Id\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\", \"Type_of_Glass\")\ncolnames(glass_data) &lt;- glass_col\n\nglass_data\n\n# A tibble: 213 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_Glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 2     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 3     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 4     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 5     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 6     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 7     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 8     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n 9    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n10    11  1.52  12.7  3.46  1.56  73.2  0.67  8.09     0  0.24             1\n# ℹ 203 more rows\n\n\n\n# Create new column from Type of Glass and filter out specific rows (use chaining)\nglass_data |&gt;\n  mutate(Type = ifelse(Type_of_Glass == 1, \"building_windows_float_processed\",\n    ifelse(Type_of_Glass == 2, \"building_windows_non_float_processed\",\n      ifelse(Type_of_Glass == 3, \"vehicle_windows_float_processed\",\n        ifelse(Type_of_Glass == 4, \"vehicle_windows_non_float_processed\",\n          ifelse(Type_of_Glass == 5, \"containers\",\n            ifelse(Type_of_Glass == 6, \"tableware\",\n              \"headlamps\"\n            ))))))) |&gt;\n  filter(Fe &lt; 0.2 & (Type == \"tableware\" | Type == \"headlamps\"))\n\n# A tibble: 38 × 12\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_Glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0             6\n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0             6\n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0             6\n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0             6\n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0             6\n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0             6\n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0             6\n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0             6\n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0             6\n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0             7\n# ℹ 28 more rows\n# ℹ 1 more variable: Type &lt;chr&gt;\n\n\n\n\nYeast data\n\n# Read in data\nyeast_data &lt;- read_table(\"yeast.data\", \n                       col_names = c(\"seq_name\", \"mcg\", \"gvh\", \"alm\", \"mit\", \"erl\", \"pox\", \n                                     \"vac\", \"nuc\", \"class\"))\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  seq_name = col_character(),\n  mcg = col_double(),\n  gvh = col_double(),\n  alm = col_double(),\n  mit = col_double(),\n  erl = col_double(),\n  pox = col_double(),\n  vac = col_double(),\n  nuc = col_double(),\n  class = col_character()\n)\n\nyeast_data\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n\n\n# Drop and add new columns (use chaining)\nyeast_data |&gt;\n  select(-seq_name, -nuc) |&gt;\n  group_by(class) |&gt;\n  mutate(across(\n    where(is.numeric),\n    list(mean = mean, median = median),\n    .names = \"{.col}_{.fn}\"))\n\n# A tibble: 1,484 × 22\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mcg_mean mcg_median gvh_mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.521       0.51    0.533\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.521       0.51    0.533\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.521       0.51    0.533\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.452       0.45    0.456\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.521       0.51    0.533\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.481       0.48    0.470\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.521       0.51    0.533\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.452       0.45    0.456\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.521       0.51    0.533\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.481       0.48    0.470\n# ℹ 1,474 more rows\n# ℹ 11 more variables: gvh_median &lt;dbl&gt;, alm_mean &lt;dbl&gt;, alm_median &lt;dbl&gt;,\n#   mit_mean &lt;dbl&gt;, mit_median &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;"
  },
  {
    "objectID": "Homework 3.html#task-3-combining-excel-and-delimited-data",
    "href": "Homework 3.html#task-3-combining-excel-and-delimited-data",
    "title": "Homework 3",
    "section": "Task 3: Combining Excel and Delimited Data",
    "text": "Task 3: Combining Excel and Delimited Data\n\nQuestion 1\n\nlibrary(readxl)\n\n# Read in excel data\nwhite_wine_data &lt;- read_excel(\"white-wine.xlsx\", \n                            sheet = excel_sheets(\"white-wine.xlsx\")[1])\n\nwhite_wine_data\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\n\nQuestion 2\n\n# Read in column names from sheet 2 of excel sheet\nwine_colnames &lt;- read_excel(\"white-wine.xlsx\", \n                            sheet = excel_sheets(\"white-wine.xlsx\")[2])\n\n# Replace white_wine_data column names\ncolnames(white_wine_data) &lt;- wine_colnames[[1]]\n\nwhite_wine_data\n\n# A tibble: 4,898 × 12\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\n\nQuestion 3\n\n# Add new wine type column\nwhite_wine_data&lt;- white_wine_data |&gt;\n                    mutate(type = \"white\")\n\nwhite_wine_data\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\nQuestion 4\n\n# Read in data\nred_wine_data &lt;- read_csv2(\"red-wine.csv\")\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 1599 Columns: 12\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (5): volatile acidity, citric acid, chlorides, density, sulphates\ndbl (2): total sulfur dioxide, quality\nnum (5): fixed acidity, residual sugar, free sulfur dioxide, pH, alcohol\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# Replace red_wine_data column names\ncolnames(red_wine_data) &lt;- wine_colnames[[1]]\n\n# Add new wine type column and cast columns to correct type\nred_wine_data&lt;- red_wine_data |&gt;\n                  mutate(type = \"red\", \n                  across(c(\"volatile_acidity\", \"citric_acid\",\"chlorides\", \"density\",\"sulphates\"),\n                         as.double))\n\nred_wine_data\n\n# A tibble: 1,599 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            74             0.7         0                19     0.076\n 2            78             0.88        0                26     0.098\n 3            78             0.76        0.04             23     0.092\n 4           112             0.28        0.56             19     0.075\n 5            74             0.7         0                19     0.076\n 6            74             0.66        0                18     0.075\n 7            79             0.6         0.06             16     0.069\n 8            73             0.65        0                12     0.065\n 9            78             0.58        0.02              2     0.073\n10            75             0.5         0.36             61     0.071\n# ℹ 1,589 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\nQuestion 5\n\n# Combine the datasets into one tibble\nwine_data &lt;- bind_rows(red_wine_data, white_wine_data)\n\nwine_data\n\n# A tibble: 6,497 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            74             0.7         0                19     0.076\n 2            78             0.88        0                26     0.098\n 3            78             0.76        0.04             23     0.092\n 4           112             0.28        0.56             19     0.075\n 5            74             0.7         0                19     0.076\n 6            74             0.66        0                18     0.075\n 7            79             0.6         0.06             16     0.069\n 8            73             0.65        0                12     0.065\n 9            78             0.58        0.02              2     0.073\n10            75             0.5         0.36             61     0.071\n# ℹ 6,487 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\n\nQuestions 6, 7, 8, & 9\n\n# Perform specified data manipulation\nwine_data |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  arrange(desc(quality)) |&gt;\n  select(contains(\"acid\"), alcohol, type, quality) |&gt;\n  group_by(quality) |&gt;\n  mutate(mean_alcohol = mean(alcohol),\n         sd_alcohol = sd(alcohol))\n\n# A tibble: 1,198 × 8\n# Groups:   quality [3]\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality mean_alcohol\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;\n 1            91             0.27        0.45     104 white       9         122.\n 2            66             0.36        0.29     124 white       9         122.\n 3            74             0.24        0.36     125 white       9         122.\n 4            69             0.36        0.34     127 white       9         122.\n 5            71             0.26        0.49     129 white       9         122.\n 6            79             0.35        0.46     128 red         8         102.\n 7           103             0.32        0.45     126 red         8         102.\n 8            56             0.85        0.05     129 red         8         102.\n 9           126             0.31        0.72      98 red         8         102.\n10            94             0.3         0.56     117 red         8         102.\n# ℹ 1,188 more rows\n# ℹ 1 more variable: sd_alcohol &lt;dbl&gt;"
  },
  {
    "objectID": "Homework 3.html#task-4-database-practice",
    "href": "Homework 3.html#task-4-database-practice",
    "title": "Homework 3",
    "section": "Task 4: Database Practice",
    "text": "Task 4: Database Practice\n\nQuestion 1\n\nlibrary(DBI)\ncon &lt;- dbConnect(RSQLite::SQLite(), \"lahman.db\")\n\ndbListTables(con)\n\n [1] \"AllstarFull\"         \"Appearances\"         \"AwardsManagers\"     \n [4] \"AwardsPlayers\"       \"AwardsShareManagers\" \"AwardsSharePlayers\" \n [7] \"Batting\"             \"BattingPost\"         \"CollegePlaying\"     \n[10] \"Fielding\"            \"FieldingOF\"          \"FieldingOFsplit\"    \n[13] \"FieldingPost\"        \"HallOfFame\"          \"HomeGames\"          \n[16] \"LahmanData\"          \"Managers\"            \"ManagersHalf\"       \n[19] \"Parks\"               \"People\"              \"Pitching\"           \n[22] \"PitchingPost\"        \"Salaries\"            \"Schools\"            \n[25] \"SeriesPost\"          \"Teams\"               \"TeamsFranchises\"    \n[28] \"TeamsHalf\"           \"battingLabels\"       \"fieldingLabels\"     \n[31] \"pitchingLabels\"     \n\n\n\n\nQuestion 2\n\ntbl(con, \"Teams\") |&gt;\n  filter(yearID == 2015) \n\n# Source:   SQL [?? x 48]\n# Database: sqlite 3.40.1 [/Users/paigeoconnell/Homework3/lahman.db]\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n\n\n\nQuestion 3\n\ntbl(con, sql(\"SELECT * FROM Teams WHERE yearID = 2015\"))\n\n# Source:   SQL [?? x 48]\n# Database: sqlite 3.40.1 [/Users/paigeoconnell/Homework3/lahman.db]\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n\n\n\nQuestion 4\n\ntbl(con, sql(\"SELECT playerID, yearid, category FROM HallOfFame WHERE inducted = 'Y'\"))\n\n# Source:   SQL [?? x 3]\n# Database: sqlite 3.40.1 [/Users/paigeoconnell/Homework3/lahman.db]\n   playerID  yearid category         \n   &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;            \n 1 cobbty01    1936 Player           \n 2 ruthba01    1936 Player           \n 3 wagneho01   1936 Player           \n 4 mathech01   1936 Player           \n 5 johnswa01   1936 Player           \n 6 lajoina01   1937 Player           \n 7 speaktr01   1937 Player           \n 8 youngcy01   1937 Player           \n 9 bulkemo99   1937 Pioneer/Executive\n10 johnsba99   1937 Pioneer/Executive\n# ℹ more rows\n\n\n\n\nQuestion 5\n\nfame_data &lt;-\ntbl(con, \nsql(\"SELECT p.nameFirst, p.nameLast, h.playerID, h.yearid, h.category\n     FROM HallOfFame AS h\n     INNER JOIN People AS p ON h.playerID = p.playerID\n     WHERE h.inducted = 'Y'\"))\n\nfame_data\n\n# Source:   SQL [?? x 5]\n# Database: sqlite 3.40.1 [/Users/paigeoconnell/Homework3/lahman.db]\n   nameFirst nameLast  playerID  yearid category         \n   &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;            \n 1 Ty        Cobb      cobbty01    1936 Player           \n 2 Babe      Ruth      ruthba01    1936 Player           \n 3 Honus     Wagner    wagneho01   1936 Player           \n 4 Christy   Mathewson mathech01   1936 Player           \n 5 Walter    Johnson   johnswa01   1936 Player           \n 6 Nap       Lajoie    lajoina01   1937 Player           \n 7 Tris      Speaker   speaktr01   1937 Player           \n 8 Cy        Young     youngcy01   1937 Player           \n 9 Morgan    Bulkeley  bulkemo99   1937 Pioneer/Executive\n10 Ban       Johnson   johnsba99   1937 Pioneer/Executive\n# ℹ more rows\n\n\n\n\nQuestion 6\n\nmanagers_data &lt;- \n  tbl(con, \"Managers\") |&gt;\n  select(playerID, G, W, L) |&gt;\n  group_by(playerID) |&gt;\n  summarize(G_managed = sum(G, na.rm = TRUE),\n            Total_W = sum(W, na.rm = TRUE),\n            Total_L = sum(L, na.rm = TRUE)) |&gt;\n  collect() |&gt;\n  mutate(Win_Loss_Percentage = Total_W/G_managed) |&gt;\n  arrange(desc(Win_Loss_Percentage))\n\nmanagers_data\n\n# A tibble: 749 × 5\n   playerID  G_managed Total_W Total_L Win_Loss_Percentage\n   &lt;chr&gt;         &lt;int&gt;   &lt;int&gt;   &lt;int&gt;               &lt;dbl&gt;\n 1 bensove01         1       1       0                   1\n 2 burwebi01         1       1       0                   1\n 3 cohenan01         1       1       0                   1\n 4 ebeldi99          3       3       0                   1\n 5 falkbi01          1       1       0                   1\n 6 hardeme01         3       3       0                   1\n 7 simmote01         1       1       0                   1\n 8 steinte01         2       2       0                   1\n 9 sukefcl01         2       2       0                   1\n10 tamarjo01         1       1       0                   1\n# ℹ 739 more rows\n\n\n\n\nQuestion 7\n\ninner_join(managers_data, as_tibble(fame_data), by = \"playerID\")\n\n# A tibble: 97 × 9\n   playerID  G_managed Total_W Total_L Win_Loss_Percentage nameFirst nameLast  \n   &lt;chr&gt;         &lt;int&gt;   &lt;int&gt;   &lt;int&gt;               &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;     \n 1 simmote01         1       1       0               1     Ted       Simmons   \n 2 wrighge01        85      59      25               0.694 George    Wright    \n 3 spaldal01       126      78      47               0.619 Al        Spalding  \n 4 mccarjo99      3487    2125    1333               0.609 Joe       McCarthy  \n 5 comisch01      1410     840     541               0.596 Charlie   Comiskey  \n 6 southbi01      1770    1044     704               0.590 Billy     Southworth\n 7 seleefr99      2180    1284     862               0.589 Frank     Selee     \n 8 chancfr01      1622     946     648               0.583 Frank     Chance    \n 9 weaveea99      2541    1480    1060               0.582 Earl      Weaver    \n10 lopezal01      2425    1410    1004               0.581 Al        Lopez     \n# ℹ 87 more rows\n# ℹ 2 more variables: yearID &lt;int&gt;, category &lt;chr&gt;"
  }
]